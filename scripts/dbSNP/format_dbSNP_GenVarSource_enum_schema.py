'''
Author:  Samantha Piekos
Date:  09/30/20
Name:  format_dbSNP_GevVarSource_enum_schema.py
Description: Write all unique population sources recording genetic variant frequencies for a .vcf
or .txt input file as enums of class GenVarSourceEnum to mcf output file.

@file_input		input .vcf or .txt file of genetic variants
@file_output	mcf output file recording all populations of genetic variant frequencies as enums of GenVarSourceEnum
'''

import sys

def collect_freq_pop(freq_pops, set_freq_pop):
	'''
	For each genetic variant instance add all populations for its frequencies to a set.
	@freq_pops		string of all populations recording frequencies for a genetic variant instance
	@set_freq_pop	set of all populations recording genetic variant frequencies
	@return			set of all populations recording genetic variant frequencies
	'''
	pops = freq_pops.split('|')
	for item in pops:
		if item == 'stonian':
			item = 'E' + item
		if item != '.':
			item = item.capitalize()  # make sure first character of the name is uppercase
			set_freq_pop.add(item.split(':')[0])
	return(set_freq_pop)

def compile_freq_pop_list(file_input):
	'''
	Compile list of all populations for genetic variant frequencies.
	@file_input	input .vcf or .txt file of genetic variants
	@return		unique list of all populations recording genetic variant frequencies
	'''
	set_freq_pop = set()
	f = open(file_input, mode='r')
	for line in f:
		line = line.strip('\r\n').split('\t')
		values = line[7].split(';')
		for item in values:
			if item.startswith("FREQ="):
				set_freq_pop = collect_freq_pop(item.strip('FREQ='), set_freq_pop)
	return(list(set_freq_pop))

def write_mcf(file_output, list_freq_pop):
	'''
	Write all populations recording genetic variant frequencies as enums of class
	GenVarSourceEnum to an output mcf file.
	@file_output	mcf output file recording all populations of genetic variant frequencies as enums of GenVarSourceEnum
	@return			unique list of all populations recording genetic variant frequencies
	'''
	w = open(file_output, mode='w')
	w.write('# Generated by script format_dbSNP_GenVarSource_enum_schema.py\n\n')
	for item in list_freq_pop:
		w.write('Node: dcid:GenVarSource' + item + '\n')
		w.write('name: "' + item + '"\n')
		w.write('typeOf: dcs:GenVarSourceEnum\n')
		w.write("\n")

def main():
	file_input = sys.argv[1]
	file_output = sys.argv[2]
	list_freq_pop = compile_freq_pop_list(file_input)
	write_mcf(file_output, list_freq_pop)

if __name__ == "__main__":
    main()
    
